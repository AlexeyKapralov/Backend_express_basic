<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="26bf12fa-1c19-43fd-bd80-8f598efb16f4" name="Changes" comment="likes for posts added&#10;&#10;likes entity, models and similar fixes like query in repositories. &#10;&#10;Also update Query Model and query mapper, now sort direction converts in 1 or -1. It's for aggregate in mongo db. Another way impossible I think.">
      <change afterPath="$PROJECT_DIR$/jest.unit.config.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/middlewares/getUserIdFromToken.middleware.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__tests__/e2e/posts/posts.api.e2e.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__tests__/e2e/posts/posts.api.e2e.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__tests__/e2e/posts/postsManager.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__tests__/e2e/posts/postsManager.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/__tests__/integration/comments/comments.integration.ts" beforeDir="false" afterPath="$PROJECT_DIR$/__tests__/integration/comments/comments.integration.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/__tests__/e2e/posts/posts.api.e2e.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/__tests__/e2e/posts/posts.api.e2e.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/__tests__/e2e/posts/postsManager.test.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/__tests__/e2e/posts/postsManager.test.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/common/utils/mappers.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/common/utils/mappers.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/common/validation/express-validation.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/common/validation/express-validation.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/blogs/blogs.router.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/blogs/blogs.router.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/blogs/repository/blogsQuery.repository.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/blogs/repository/blogsQuery.repository.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/likes/domain/likesForPosts.entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/likes/domain/likesForPosts.entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/posts/domain/post.entity.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/posts/domain/post.entity.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/posts/posts.controller.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/posts/posts.controller.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/posts/posts.router.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/posts/posts.router.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/posts/repository/posts.repository.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/posts/repository/posts.repository.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/posts/repository/postsQuery.repository.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/posts/repository/postsQuery.repository.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/features/posts/service/posts.service.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/features/posts/service/posts.service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/middlewares/auth.middleware.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/middlewares/auth.middleware.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/utils/mappers.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/utils/mappers.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/validation/express-validation.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/validation/express-validation.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/blogs/blogs.router.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/blogs/blogs.router.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/blogs/domain/blogs.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/blogs/domain/blogs.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/blogs/repository/blogsQuery.repository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/blogs/repository/blogsQuery.repository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/comments/repository/commentsQuery.repository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/comments/repository/commentsQuery.repository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/likes/domain/likesForPosts.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/likes/domain/likesForPosts.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/posts/domain/post.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/posts/domain/post.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/posts/posts.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/posts/posts.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/posts/posts.router.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/posts/posts.router.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/posts/repository/posts.repository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/posts/repository/posts.repository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/posts/repository/postsQuery.repository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/posts/repository/postsQuery.repository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/features/posts/service/posts.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/features/posts/service/posts.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/middlewares/auth.middleware.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/middlewares/auth.middleware.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;AlexeyKapralov&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:AlexeyKapralov/Backend_repositories.git&quot;,
    &quot;accountId&quot;: &quot;ebe27a31-07e9-40f5-8ca6-488b90645849&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2gMslTgPGDVAl7NZJQIqO1ifamS" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="openDirectoriesWithSingleClick" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Jest.Authentication User.executor": "Run",
    "Jest.Authentication User.should register user (add in db with confirmation code.executor": "Run",
    "Jest.Authentication User.should update refresh token.executor": "Run",
    "Jest.Authentication User.shouldn't update refresh token after expired time.executor": "Run",
    "Jest.Authentication User.shouldn't update refresh token.executor": "Run",
    "Jest.Integration Auth.executor": "Run",
    "Jest.Integration Auth.should create tokens.executor": "Run",
    "Jest.Login User.should login user.executor": "Run",
    "Jest.Login User.should update refresh token.executor": "Run",
    "Jest.Login User.shouldn't update refresh token after expired time.executor": "Run",
    "Jest.Test for createBlog method in blogsService.executor": "Run",
    "Jest.Test for createBlog method in blogsService.unit test for create a new blog from blogService.executor": "Run",
    "Jest.auth test (1).executor": "Run",
    "Jest.auth test.executor": "Run",
    "Jest.auth test.should auth.executor": "Debug",
    "Jest.auth test.should logout.executor": "Run",
    "Jest.blogs tests.executor": "Run",
    "Jest.blogs tests.should create blog.executor": "Run",
    "Jest.blogs tests.should get blogs with custom pagination.executor": "Run",
    "Jest.blogs tests.should get blogs with default pagination and empty array.executor": "Run",
    "Jest.blogs tests.should get blogs with filter .executor": "Run",
    "Jest.blogs tests.shouldn't create blog with no auth.executor": "Run",
    "Jest.blogs tests.shouldn't create blog with no correct data.executor": "Run",
    "Jest.blogs.api.e2e.ts.executor": "Run",
    "Jest.comments e2e tests.executor": "Run",
    "Jest.comments e2e tests.should get comments array with custom pagination.executor": "Debug",
    "Jest.comments integration tests.should delete comment.executor": "Run",
    "Jest.comments integration tests.shouldn't delete comment with another userId.executor": "Run",
    "Jest.comments integration tests.shouldn't update comment with another user.executor": "Run",
    "Jest.comments.api.e2e.ts.executor": "Run",
    "Jest.devices.e2e.ts.executor": "Run",
    "Jest.e2e test for devices.Should delete another devices.executor": "Run",
    "Jest.e2e test for devices.Should delete device.executor": "Run",
    "Jest.e2e test for devices.Should get a device list of devices.executor": "Run",
    "Jest.e2e test for devices.Should get delete another devices.executor": "Run",
    "Jest.e2e test for devices.Shouldn't delete device with token from another user.executor": "Run",
    "Jest.e2e test for devices.executor": "Run",
    "Jest.integration test delete device.executor": "Run",
    "Jest.integration test delete device.should return forbidden.executor": "Run",
    "Jest.integration test delete device.should return not found.executor": "Run",
    "Jest.integration test delete device.should return unauthorize.executor": "Run",
    "Jest.logout user integration test.executor": "Run",
    "Jest.logout user integration test.should logout and error if try refresh token with old token.executor": "Run",
    "Jest.logout user integration test.should logout user.executor": "Run",
    "Jest.logout user integration test.shouldn't logout user with incorrect token.executor": "Run",
    "Jest.logout user integration test.shouldn't refresh token if token was logout.executor": "Run",
    "Jest.logout user integration test.test.executor": "Debug",
    "Jest.posts tests.should get posts with default pagination and empty array.executor": "Run",
    "Jest.posts tests.should get posts with default pagination.executor": "Debug",
    "Jest.posts.api.e2e.ts.executor": "Run",
    "Jest.refresh Token e2e test.executor": "Run",
    "Jest.refresh Token integration test.executor": "Run",
    "Jest.refresh Token integration test.should refresh token.executor": "Debug",
    "Jest.refresh token test.executor": "Run",
    "Jest.refresh token test.should refresh token.executor": "Run",
    "Jest.show-delayed-banner.executor": "Run",
    "Jest.user tests.executor": "Run",
    "Jest.users.api.e2e.ts.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "D:/Projects/IT_Incubator_Projects/Social_network_backend_express/src/features/likes/mappers",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "D:/Projects/IT_Incubator_Projects/Social_network_backend_express/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "npm.dev.executor": "Run",
    "npm.test coverage.executor": "Run",
    "npm.test:e2e.executor": "Run",
    "npm.test:integration.executor": "Run",
    "npm.test:unit.executor": "Run",
    "npm.watch.executor": "Run",
    "settings.editor.selected.configurable": "preferences.keymap",
    "ts.external.directory.path": "D:\\Projects\\IT_Incubator_Projects\\Social_network_backend_express\\node_modules\\typescript\\lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express\src\features\likes\mappers" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express\src\middlewares" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express\src\features\posts\domain" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend\__tests__\utils" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express\src\features\likes\domain" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express\src\features\likes\models" />
      <recent name="D:\Projects\IT_Incubator\Social_network_backend_express\src\features\comments\controllers" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend\src\features\rateLimits\models" />
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend\src\features\users\service" />
    </key>
    <key name="es6.move.members.recent.items">
      <recent name="D:\Projects\IT_Incubator_Projects\Social_network_backend_express\src\common\types\like.type.ts" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.posts tests.should get posts with default pagination">
    <configuration name="comments e2e tests.should get comments array with custom pagination" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/e2e/comments/comments.api.e2e.ts" />
      <test-names>
        <test-name value="comments e2e tests" />
        <test-name value="should get comments array with custom pagination" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="posts tests.should get posts with default pagination" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/__tests__/e2e/posts/posts.api.e2e.ts" />
      <test-names>
        <test-name value="posts tests" />
        <test-name value="should get posts with default pagination" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="test:e2e" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:e2e" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test:integration" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:integration" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <configuration name="test:unit" type="js.build_tools.npm" temporary="true" nameIsGenerated="true">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="test:unit" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="npm.test:unit" />
        <item itemvalue="npm.test:integration" />
        <item itemvalue="npm.test:e2e" />
        <item itemvalue="Jest.posts tests.should get posts with default pagination" />
        <item itemvalue="Jest.comments e2e tests.should get comments array with custom pagination" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-WS-241.17011.90" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="26bf12fa-1c19-43fd-bd80-8f598efb16f4" name="Changes" comment="" />
      <created>1715518933593</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715518933593</updated>
      <workItem from="1715518935548" duration="3791000" />
      <workItem from="1715629308315" duration="11000" />
      <workItem from="1715629396450" duration="1513000" />
      <workItem from="1715663040945" duration="23984000" />
      <workItem from="1716014567588" duration="35349000" />
      <workItem from="1716268615446" duration="21269000" />
      <workItem from="1716404971231" duration="1088000" />
      <workItem from="1716440091789" duration="1068000" />
      <workItem from="1716441374252" duration="1198000" />
      <workItem from="1716442603849" duration="14000" />
      <workItem from="1716442630751" duration="27993000" />
      <workItem from="1716614930749" duration="123000" />
      <workItem from="1716615062038" duration="60853000" />
      <workItem from="1716786323116" duration="19011000" />
      <workItem from="1716900880629" duration="3076000" />
      <workItem from="1716995386748" duration="7353000" />
      <workItem from="1717046831530" duration="21715000" />
      <workItem from="1717171895777" duration="53077000" />
      <workItem from="1717914235167" duration="36251000" />
      <workItem from="1718206022382" duration="3493000" />
      <workItem from="1718262511830" duration="6322000" />
      <workItem from="1718298332806" duration="30000" />
      <workItem from="1718298384946" duration="10863000" />
      <workItem from="1718342092388" duration="35846000" />
      <workItem from="1718475740875" duration="6113000" />
      <workItem from="1718516468960" duration="26930000" />
    </task>
    <task id="LOCAL-00001" summary="small fixes">
      <option name="closed" value="true" />
      <created>1715522020569</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1715522020569</updated>
    </task>
    <task id="LOCAL-00002" summary="add logout and refresh token endpoints and tests for these endpoints, also add fake timers for tests">
      <option name="closed" value="true" />
      <created>1716116099381</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1716116099381</updated>
    </task>
    <task id="LOCAL-00003" summary="add custom rate limit">
      <option name="closed" value="true" />
      <created>1716317761597</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1716317761597</updated>
    </task>
    <task id="LOCAL-00004" summary="Update login service and refactor tests&#10;&#10;The code has been updated to enhance the login service that now receives additional parameters. Related tests have been refactored for this change. Files related to handling blocklist functionality have been removed. The auth test file has been renamed, and a new test file for refresh token has been added. The integration test for logout has been updated. The mechanism to handle devices for security has been introduced.">
      <option name="closed" value="true" />
      <created>1716754647915</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1716754647915</updated>
    </task>
    <task id="LOCAL-00005" summary="little refactor refresh token test and jwt expire time use values from settings">
      <option name="closed" value="true" />
      <created>1716902145742</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1716902145742</updated>
    </task>
    <task id="LOCAL-00006" summary="Refactor project structure, add new mappers, update services path&#10;&#10;The commit includes restructuring of the project for better maintenance. Import paths of services in various controllers have been updated. In addition, several new mappers were added to different features like users, blogs, posts, and comments. Cookie checks were introduced in securityDevices routes, and some unnecessary authorization checks were removed from its controllers. Note, further refactoring may be required.">
      <option name="closed" value="true" />
      <created>1717093836286</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1717093836287</updated>
    </task>
    <task id="LOCAL-00007" summary="transfer to mongoose and correct tests, also small fixes">
      <option name="closed" value="true" />
      <created>1717242645076</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1717242645076</updated>
    </task>
    <task id="LOCAL-00008" summary="Ioc Container added">
      <option name="closed" value="true" />
      <created>1718310028582</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1718310028582</updated>
    </task>
    <task id="LOCAL-00009" summary="Ioc Container added">
      <option name="closed" value="true" />
      <created>1718310043096</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1718310043096</updated>
    </task>
    <task id="LOCAL-00010" summary="Tests refactored">
      <option name="closed" value="true" />
      <created>1718351524366</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1718351524366</updated>
    </task>
    <task id="LOCAL-00011" summary="static and instance methods was created for Blogs">
      <option name="closed" value="true" />
      <created>1718447685053</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1718447685053</updated>
    </task>
    <task id="LOCAL-00012" summary="likes for posts added&#10;&#10;likes entity, models and similar fixes like query in repositories. &#10;&#10;Also update Query Model and query mapper, now sort direction converts in 1 or -1. It's for aggregate in mongo db. Another way impossible I think.">
      <option name="closed" value="true" />
      <created>1718482007336</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1718482007336</updated>
    </task>
    <option name="localTasksCounter" value="13" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="small fixes" />
    <MESSAGE value="add logout and refresh token endpoints and tests for these endpoints, also add fake timers for tests" />
    <MESSAGE value="add custom rate limit" />
    <MESSAGE value="Updated authentication functionality and test refactoring&#10;&#10;The commit introduces changes including updating the loginController to include user agent and IP, renaming and modifying test files for better handling and assertions. It also introduces refreshToken integration tests and updates a comment in authManager.test.ts. A significant portion of the changes involves updating test cases to adapt to the new token structure, ensuring accurate verification of access and refresh tokens." />
    <MESSAGE value="Update login service and refactor tests&#10;&#10;The code has been updated to enhance the login service that now receives additional parameters. Related tests have been refactored for this change. Files related to handling blocklist functionality have been removed. The auth test file has been renamed, and a new test file for refresh token has been added. The integration test for logout has been updated. The mechanism to handle devices for security has been introduced." />
    <MESSAGE value="some refactor" />
    <MESSAGE value="little refactor refresh token test and jwt expire time use values from settings" />
    <MESSAGE value="Refactor project structure, add new mappers, update services path&#10;&#10;The commit includes restructuring of the project for better maintenance. Import paths of services in various controllers have been updated. In addition, several new mappers were added to different features like users, blogs, posts, and comments. Cookie checks were introduced in securityDevices routes, and some unnecessary authorization checks were removed from its controllers. Note, further refactoring may be required." />
    <MESSAGE value="create integration and e2e tests for comments" />
    <MESSAGE value="transfer to mongoose and correct tests, also small fixes" />
    <MESSAGE value="comment endpoint refactor&#10;&#10;now it contains likesInfo (likes count, dislike count and myStatus), types, schemas for likes were add, correct tests for new schema, likeStatus validator was added" />
    <MESSAGE value="Ioc Container adds" />
    <MESSAGE value="Ioc Container added" />
    <MESSAGE value="Tests refactored" />
    <MESSAGE value="static and instance methods was created for Blogs" />
    <MESSAGE value="likes for posts added&#10;&#10;likes entity, models and similar fixes like query in repositories. &#10;&#10;Also update Query Model and query mapper, now sort direction converts in 1 or -1. It's for aggregate in mongo db. Another way impossible I think." />
    <option name="LAST_COMMIT_MESSAGE" value="likes for posts added&#10;&#10;likes entity, models and similar fixes like query in repositories. &#10;&#10;Also update Query Model and query mapper, now sort direction converts in 1 or -1. It's for aggregate in mongo db. Another way impossible I think." />
  </component>
</project>