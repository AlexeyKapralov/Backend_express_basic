"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.postsRouter = void 0;
const express_1 = require("express");
const getPosts_controller_1 = require("./controllers/getPosts.controller");
const createPost_controller_1 = require("./controllers/createPost.controller");
const express_validation_1 = require("../../common/validation/express-validation");
const auth_middleware_1 = require("../../middlewares/auth.middleware");
const inputValidation_middleware_1 = require("../../middlewares/inputValidation.middleware");
const getPostById_controller_1 = require("./controllers/getPostById.controller");
const updatePostById_controller_1 = require("./controllers/updatePostById.controller");
const deletePost_controller_1 = require("./controllers/deletePost.controller");
const createCommentForPost_controller_1 = require("./controllers/createCommentForPost.controller");
const getComments_controller_1 = require("./controllers/getComments.controller");
exports.postsRouter = (0, express_1.Router)({});
exports.postsRouter.get('/:id/comments', express_validation_1.pageNumberValidation, express_validation_1.pageSizeValidation, express_validation_1.sortByValidation, express_validation_1.sortDirectionValidation, getComments_controller_1.getCommentsController);
exports.postsRouter.post('/:postId/comments', auth_middleware_1.authMiddleware, express_validation_1.contentCommentValidation, inputValidation_middleware_1.inputValidationMiddleware, createCommentForPost_controller_1.createCommentForPostController);
exports.postsRouter.get('/', express_validation_1.pageNumberValidation, express_validation_1.pageSizeValidation, express_validation_1.sortByValidation, express_validation_1.sortDirectionValidation, getPosts_controller_1.getPostsController);
exports.postsRouter.post('/', auth_middleware_1.authMiddleware, express_validation_1.titleValidation, express_validation_1.shortDescriptionValidation, express_validation_1.contentValidation, express_validation_1.blogIdInBodyValidation, inputValidation_middleware_1.inputValidationMiddleware, createPost_controller_1.createPostController);
exports.postsRouter.get('/:id', express_validation_1.postIdValidation, inputValidation_middleware_1.inputValidationMiddleware, getPostById_controller_1.getPostByIdController);
exports.postsRouter.put('/:id', auth_middleware_1.authMiddleware, express_validation_1.blogIdInBodyValidation, express_validation_1.contentValidation, express_validation_1.titleValidation, express_validation_1.shortDescriptionValidation, inputValidation_middleware_1.inputValidationMiddleware, updatePostById_controller_1.updatePostByIdController);
exports.postsRouter.delete('/:id', auth_middleware_1.authMiddleware, express_validation_1.titleValidation, deletePost_controller_1.deletePostController);
